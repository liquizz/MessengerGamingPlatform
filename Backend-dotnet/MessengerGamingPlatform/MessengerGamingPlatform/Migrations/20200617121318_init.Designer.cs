// <auto-generated />
using System;
using Component.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Component.Web.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200617121318_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Component.Database.Models.MapPositioning", b =>
                {
                    b.Property<int>("MapPositioningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("MapPositioningId");

                    b.HasIndex("PlayerId");

                    b.ToTable("MapPositionings");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattle", b =>
                {
                    b.Property<int>("MedievalBatlleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SessionMedievalBattleId")
                        .HasColumnType("int");

                    b.HasKey("MedievalBatlleId");

                    b.HasIndex("SessionMedievalBattleId")
                        .IsUnique();

                    b.ToTable("MedievalBattles");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleStats", b =>
                {
                    b.Property<int>("MedievalBattleStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("MedievalBattleStatsId");

                    b.ToTable("MedievalBattleStats");
                });

            modelBuilder.Entity("Component.Database.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MedievalBattleId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("MedievalBattleId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Component.Database.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MapPositioningId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionNumber")
                        .HasColumnType("int");

                    b.HasKey("PositionId");

                    b.HasIndex("MapPositioningId")
                        .IsUnique();

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Component.Database.Models.SessionMedievalBattle", b =>
                {
                    b.Property<int>("SessionMedievalBattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SessionMedievalBattleId");

                    b.ToTable("SessionMedievalBattles");
                });

            modelBuilder.Entity("Component.Database.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MapPositioningId")
                        .HasColumnType("int");

                    b.Property<int>("UnitCurrentDP")
                        .HasColumnType("int");

                    b.Property<int>("UnitCurrentHP")
                        .HasColumnType("int");

                    b.Property<string>("UnitCustomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.HasIndex("MapPositioningId")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Component.Database.Models.UnitClasses", b =>
                {
                    b.Property<int>("UnitClassesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AttackCooldown")
                        .HasColumnType("real");

                    b.Property<float>("AttackRange")
                        .HasColumnType("real");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefencePoints")
                        .HasColumnType("int");

                    b.Property<int>("HealPoints")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("UnitClassesId");

                    b.HasIndex("UnitId")
                        .IsUnique();

                    b.ToTable("UnitClasses");
                });

            modelBuilder.Entity("Component.Database.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Component.Database.Models.UserStatistics", b =>
                {
                    b.Property<int>("UserStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserStatisticsId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStatistics");
                });

            modelBuilder.Entity("Component.Database.Models.UsersSessionsMedievalBattle", b =>
                {
                    b.Property<int>("UsersSessionsMedievalBattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SessionMedievalBattleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UsersSessionsMedievalBattleId");

                    b.HasIndex("SessionMedievalBattleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersSessionsMedievalBattle");
                });

            modelBuilder.Entity("Component.Database.Models.MapPositioning", b =>
                {
                    b.HasOne("Component.Database.Models.Player", "Player")
                        .WithMany("MapPositionings")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattle", b =>
                {
                    b.HasOne("Component.Database.Models.SessionMedievalBattle", "SessionMedievalBattle")
                        .WithOne("MedievalBattle")
                        .HasForeignKey("Component.Database.Models.MedievalBattle", "SessionMedievalBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.Player", b =>
                {
                    b.HasOne("Component.Database.Models.MedievalBattle", "MedievalBattle")
                        .WithMany("Players")
                        .HasForeignKey("MedievalBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.Position", b =>
                {
                    b.HasOne("Component.Database.Models.MapPositioning", "MapPositioning")
                        .WithOne("Position")
                        .HasForeignKey("Component.Database.Models.Position", "MapPositioningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.Unit", b =>
                {
                    b.HasOne("Component.Database.Models.MapPositioning", "MapPositioning")
                        .WithOne("Unit")
                        .HasForeignKey("Component.Database.Models.Unit", "MapPositioningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.UnitClasses", b =>
                {
                    b.HasOne("Component.Database.Models.Unit", "Unit")
                        .WithOne("UnitClasses")
                        .HasForeignKey("Component.Database.Models.UnitClasses", "UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.UserStatistics", b =>
                {
                    b.HasOne("Component.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Component.Database.Models.UsersSessionsMedievalBattle", b =>
                {
                    b.HasOne("Component.Database.Models.SessionMedievalBattle", "SessionMedievalBattle")
                        .WithMany("UsersSessionsMedievalBattles")
                        .HasForeignKey("SessionMedievalBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Component.Database.Models.User", "User")
                        .WithMany("usersSessionsMedievalBattles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
