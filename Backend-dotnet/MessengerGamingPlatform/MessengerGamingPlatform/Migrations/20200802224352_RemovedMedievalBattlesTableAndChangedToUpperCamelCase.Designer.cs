// <auto-generated />
using System;
using Component.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Component.Web.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200802224352_RemovedMedievalBattlesTableAndChangedToUpperCamelCase")]
    partial class RemovedMedievalBattlesTableAndChangedToUpperCamelCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.AbstractField", b =>
                {
                    b.Property<int>("AbstractFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AbstractFieldId1")
                        .HasColumnType("int");

                    b.Property<int>("DamagePerUnit")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldArmor")
                        .HasColumnType("int");

                    b.Property<int>("FieldDamage")
                        .HasColumnType("int");

                    b.Property<int>("FieldHp")
                        .HasColumnType("int");

                    b.Property<int>("FieldSize")
                        .HasColumnType("int");

                    b.Property<int>("FieldUnitCount")
                        .HasColumnType("int");

                    b.Property<int?>("GameControllerId")
                        .HasColumnType("int");

                    b.Property<int>("HpPerUnit")
                        .HasColumnType("int");

                    b.Property<int?>("LocalStatisticId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("UnitCost")
                        .HasColumnType("int");

                    b.HasKey("AbstractFieldId");

                    b.HasIndex("AbstractFieldId1");

                    b.HasIndex("GameControllerId");

                    b.HasIndex("LocalStatisticId");

                    b.ToTable("AbstractFields");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AbstractField");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.AliveField", b =>
                {
                    b.Property<int>("AliveFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<int?>("GameControllerId")
                        .HasColumnType("int");

                    b.HasKey("AliveFieldId");

                    b.HasIndex("GameControllerId");

                    b.ToTable("aliveFieldsCount");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Coin", b =>
                {
                    b.Property<int>("CoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameControllerId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("CoinId");

                    b.HasIndex("GameControllerId");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.GameController", b =>
                {
                    b.Property<int>("GameControllerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentTurn")
                        .HasColumnType("int");

                    b.Property<int>("DefeatTeam")
                        .HasColumnType("int");

                    b.Property<bool>("GameAvaliable")
                        .HasColumnType("bit");

                    b.Property<int>("SessionMedievalBattleId")
                        .HasColumnType("int");

                    b.HasKey("GameControllerId");

                    b.HasIndex("SessionMedievalBattleId")
                        .IsUnique();

                    b.ToTable("GameControllers");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.LocalStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UnitAliveCount")
                        .HasColumnType("int");

                    b.Property<int>("UnitDeadCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LocalStatistic");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("ArmorDurability")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int?>("ParentObjectAbstractFieldId")
                        .HasColumnType("int");

                    b.HasKey("UnitId");

                    b.HasIndex("ParentObjectAbstractFieldId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleStats", b =>
                {
                    b.Property<int>("MedievalBattleStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("MedievalBattleStatsId");

                    b.ToTable("MedievalBattleStats");
                });

            modelBuilder.Entity("Component.Database.Models.SessionMedievalBattle", b =>
                {
                    b.Property<int>("SessionMedievalBattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SessionMedievalBattleId");

                    b.ToTable("SessionMedievalBattles");
                });

            modelBuilder.Entity("Component.Database.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Component.Database.Models.UserStatistics", b =>
                {
                    b.Property<int>("UserStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserStatisticsId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStatistics");
                });

            modelBuilder.Entity("Component.Database.Models.UsersSessionsMedievalBattle", b =>
                {
                    b.Property<int>("UsersSessionsMedievalBattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SessionMedievalBattleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UsersSessionsMedievalBattleId");

                    b.HasIndex("SessionMedievalBattleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersSessionsMedievalBattle");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Archer", b =>
                {
                    b.HasBaseType("Component.Database.Models.MedievalBattleModels.AbstractField");

                    b.HasDiscriminator().HasValue("Archer");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Fighter", b =>
                {
                    b.HasBaseType("Component.Database.Models.MedievalBattleModels.AbstractField");

                    b.HasDiscriminator().HasValue("Fighter");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Flank", b =>
                {
                    b.HasBaseType("Component.Database.Models.MedievalBattleModels.AbstractField");

                    b.HasDiscriminator().HasValue("Flank");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.AbstractField", b =>
                {
                    b.HasOne("Component.Database.Models.MedievalBattleModels.AbstractField", null)
                        .WithMany("Enemies")
                        .HasForeignKey("AbstractFieldId1");

                    b.HasOne("Component.Database.Models.MedievalBattleModels.GameController", "GameController")
                        .WithMany()
                        .HasForeignKey("GameControllerId");

                    b.HasOne("Component.Database.Models.MedievalBattleModels.LocalStatistic", "LocalStatistic")
                        .WithMany()
                        .HasForeignKey("LocalStatisticId");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.AliveField", b =>
                {
                    b.HasOne("Component.Database.Models.MedievalBattleModels.GameController", null)
                        .WithMany("AliveFieldsCount")
                        .HasForeignKey("GameControllerId");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Coin", b =>
                {
                    b.HasOne("Component.Database.Models.MedievalBattleModels.GameController", null)
                        .WithMany("Coins")
                        .HasForeignKey("GameControllerId");
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.GameController", b =>
                {
                    b.HasOne("Component.Database.Models.SessionMedievalBattle", "SessionMedievalBattle")
                        .WithOne("GameController")
                        .HasForeignKey("Component.Database.Models.MedievalBattleModels.GameController", "SessionMedievalBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Component.Database.Models.MedievalBattleModels.Unit", b =>
                {
                    b.HasOne("Component.Database.Models.MedievalBattleModels.AbstractField", "ParentObject")
                        .WithMany("Units")
                        .HasForeignKey("ParentObjectAbstractFieldId");
                });

            modelBuilder.Entity("Component.Database.Models.UserStatistics", b =>
                {
                    b.HasOne("Component.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Component.Database.Models.UsersSessionsMedievalBattle", b =>
                {
                    b.HasOne("Component.Database.Models.SessionMedievalBattle", "SessionMedievalBattle")
                        .WithMany("UsersSessionsMedievalBattles")
                        .HasForeignKey("SessionMedievalBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Component.Database.Models.User", "User")
                        .WithMany("usersSessionsMedievalBattles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
